name: Rebuild & push images
on:
  push:
    branches:
      - main
      - stable

jobs:
  build-n-push:
    # To not run in forks
    if: github.repository_owner == 'packit'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dockerfile: Dockerfile
            image: packit-service-centosmsg

    steps:
      - uses: actions/checkout@v2

      - name: Extract branch name and set tags
        shell: bash
        run: |
          branch=${GITHUB_REF#refs/heads/}
          tags=""
          case $branch in
              main)
                  tags="stg latest"
                  ;;
              stable)
                  tags="prod"
                  ;;
          esac
          echo "::set-output name=branch::$branch"
          echo "::set-output name=tags::$tags"
        id: branch_tags

      - name: Tag current image before building a new one
        shell: bash
        run: |
          # If the Quay repo name != Github repo name then replace ${{ github.repository }}
          endpoint=https://quay.io/api/v1/repository/${{ github.repository }}/tag/
          header="Authorization: Bearer ${{ secrets.QUAY_OAUTH_TOKEN }}"
          tag="${{ steps.branch_tags.outputs.tags }}"
          # rstript the " latest"
          [[ $tag == stg* ]] && tag="stg"

          # get id of latest image with such tag
          url="${endpoint}?onlyActiveTags=true&specificTag=${tag}"
          echo "Querying ${url}"
          latest_image=$(curl -H "${header}" "${url}")
          echo $latest_image | jq  # debug
          # prepare data: {"image": "the-image-id"}
          data=$(echo "${latest_image}" | jq '.tags[0] | {image: .docker_image_id}')
          # tag the image with {prod|stg}-1
          # https://docs.quay.io/api/swagger/#!/tag/changeTag (don't expect the data documented there)
          echo "Putting ${data} to ${endpoint}${tag}-1"
          curl -X PUT -H "${header}" -H "Content-Type:application/json" -d "$data" "${endpoint}${tag}-1"

      - name: Build Image
        id: build-image
        # https://github.com/marketplace/actions/buildah-build
        uses: redhat-actions/buildah-build@v2
        with:
          dockerfiles: ${{ matrix.dockerfile }}
          image: ${{ matrix.image }}
          tags: ${{ steps.branch_tags.outputs.tags }}
          oci: true

      - name: Push To Quay
        # https://github.com/marketplace/actions/push-to-registry
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: quay.io/packit
          username: ${{ secrets.QUAY_IMAGE_BUILDER_USERNAME }}
          password: ${{ secrets.QUAY_IMAGE_BUILDER_TOKEN }}
